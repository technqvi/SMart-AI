CREATE OR REPLACE PROCEDURE `pongthorn.SMartDataAnalytics.merge_project`()
OPTIONS (description="merge solution")
BEGIN
 
 Declare upate_at_to timestamp DEFAULT CURRENT_TIMESTAMP() ;

 BEGIN TRANSACTION;
  
  MERGE pongthorn.SMartDataAnalytics.project AS m
  USING pongthorn.SMartData_Temp.temp_project as t
  ON m.project_id = t.project_id
  
  WHEN MATCHED and t.action = 'deleted' THEN
      UPDATE SET m.is_deleted =True,m.update_at=upate_at_to

  WHEN MATCHED and t.action = 'changed' THEN
    UPDATE SET 
    m.enq=t.enq,
    m.project_name=t.project_name,
    m.project_start=t.project_start,
    m.project_end=t.project_end,
    m.company_id=t.company_id,
    m.company=t.company,
    m.has_pm=t.has_pm,
    m.is_deleted =False,m.update_at=upate_at_to

  WHEN NOT MATCHED BY TARGET THEN
    INSERT (project_id, enq, project_name, project_start, project_end, company_id, company, has_pm,is_deleted,update_at) 
    VALUES(t.project_id, t.enq, t.project_name, t.project_start, t.project_end, t.company_id, t.company, t.has_pm,False,upate_at_to)
  ;

  truncate table  pongthorn.SMartData_Temp.temp_project;
 COMMIT TRANSACTION; 

EXCEPTION WHEN ERROR THEN
 select @@error.message,@@error.statement_text; 
 ROLLBACK TRANSACTION;

END;